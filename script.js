const tg = window.Telegram.WebApp;
tg.expand();

let albums = {};

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram CloudStorage
tg.CloudStorage.getItem("albums", (err, data) => {
    if (!err && data) {
        albums = JSON.parse(data);
        renderAlbums();
    }
});

document.getElementById('createAlbumBtn').addEventListener('click', createAlbum);

function createAlbum() {
    const albumName = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞:");
    if (albumName && !albums[albumName]) {
        albums[albumName] = [];
        saveAlbums();
        renderAlbums();
    } else {
        alert("–ê–ª—å–±–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º—è –ø—É—Å—Ç–æ–µ!");
    }
}

function addStep(albumName) {
    const caption = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ —à–∞–≥—É:");
    if (!caption) return;

    const fileInput = document.createElement('input');
    fileInput.type = 'file';
    fileInput.accept = 'image/*';
    fileInput.onchange = (e) => {
        const file = e.target.files[0];
        const reader = new FileReader();
        reader.onload = () => {
            albums[albumName].push({ image: reader.result, caption, completed: false });
            saveAlbums();
            renderAlbum(albumName);
        };
        reader.readAsDataURL(file);
    };
    fileInput.click();
}

function deleteAlbum(albumName) {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–ª—å–±–æ–º "${albumName}"?`)) {
        delete albums[albumName];
        saveAlbums();
        renderAlbums();
    }
}

function deleteStep(albumName, index) {
    if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥?")) {
        albums[albumName].splice(index, 1);
        saveAlbums();
        renderAlbum(albumName);
    }
}

function toggleStepCompletion(albumName, index) {
    albums[albumName][index].completed = !albums[albumName][index].completed;
    saveAlbums();
    renderAlbum(albumName);
}

function editStepText(albumName, index) {
    const newCaption = prompt("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å:", albums[albumName][index].caption);
    if (newCaption !== null) {
        albums[albumName][index].caption = newCaption;
        saveAlbums();
        renderAlbum(albumName);
    }
}

function sendAlbum(albumName) {
    const message = `üìÖ –í–∏–∑—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: ${albumName}\n\n` + 
        albums[albumName].map((step, i) => `‚úÖ ${i + 1}. ${step.caption}`).join("\n");

    tg.showPopup({
        title: "–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª—å–±–æ–º–∞",
        message: "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
        buttons: [{ text: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram", id: "send" }]
    });

    tg.onEvent('popupClosed', (data) => {
        if (data.button_id === "send") {
            tg.sendData(JSON.stringify({ text: message }));
        }
    });
}

function saveAlbums() {
    tg.CloudStorage.setItem("albums", JSON.stringify(albums), (err) => {
        if (err) console.warn("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", err);
    });
}

function renderAlbums() {
    const albumsDiv = document.getElementById('albums');
    albumsDiv.innerHTML = '';

    for (const albumName in albums) {
        const albumDiv = document.createElement('div');
        albumDiv.className = 'album';
        albumDiv.innerHTML = `
            <h2>${albumName}</h2>
            <button onclick="renderAlbum('${albumName}')">–û—Ç–∫—Ä—ã—Ç—å</button>
            <button onclick="addStep('${albumName}')">–î–æ–±–∞–≤–∏—Ç—å —à–∞–≥</button>
            <button onclick="deleteAlbum('${albumName}')">–£–¥–∞–ª–∏—Ç—å –∞–ª—å–±–æ–º</button>
            <button onclick="sendAlbum('${albumName}')">üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è</button>
        `;
        albumsDiv.appendChild(albumDiv);
    }
}

function renderAlbum(albumName) {
    const albumsDiv = document.getElementById('albums');
    albumsDiv.innerHTML = `<h2>${albumName}</h2><button onclick="renderAlbums()">–ù–∞–∑–∞–¥</button>`;

    albums[albumName].forEach((step, index) => {
        const stepDiv = document.createElement('div');
        stepDiv.className = 'step';
        stepDiv.innerHTML = `
            <img src="${step.image}" alt="–®–∞–≥ ${index + 1}" onclick="viewImage('${step.image}')">
            <span class="step-caption" onclick="editStepText('${albumName}', ${index})">${step.caption}</span>
            <input type="checkbox" ${step.completed ? "checked" : ""} onclick="toggleStepCompletion('${albumName}', ${index})">
            <button onclick="deleteStep('${albumName}', ${index})">üóë</button>
        `;
        albumsDiv.appendChild(stepDiv);
    });
}

function viewImage(src) {
    const imgWindow = window.open();
    imgWindow.document.write(`<img src="${src}" style="width:100%; height:auto;">`);
}

renderAlbums();
