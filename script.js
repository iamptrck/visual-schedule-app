const tg = window.Telegram.WebApp;
tg.expand();

let albums = {};

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CloudStorage –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
tg.CloudStorage.getItem("albums", (err, data) => {
    if (!err && data) {
        try {
            albums = JSON.parse(data);
            renderAlbums();
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", e);
            albums = {};
        }
    }
});

document.getElementById('createAlbumBtn').addEventListener('click', createAlbum);
document.getElementById('shareAppBtn').addEventListener('click', shareApp);
document.getElementById('faqBtn').addEventListener('click', openFAQ);

function createAlbum() {
    const albumName = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞:");
    if (albumName && !albums[albumName]) {
        albums[albumName] = [];
        saveAlbums();
        renderAlbums();
    } else {
        alert("–ê–ª—å–±–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º—è –ø—É—Å—Ç–æ–µ!");
    }
}

function renameAlbum(albumName) {
    const newName = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞:", albumName);
    if (newName && newName !== albumName && !albums[newName]) {
        albums[newName] = albums[albumName];
        delete albums[albumName];
        saveAlbums();
        renderAlbums();
    }
}

function addStep(albumName) {
    const caption = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ —à–∞–≥—É:");
    if (!caption) return;

    const fileInput = document.createElement('input');
    fileInput.type = 'file';
    fileInput.accept = 'image/*';
    fileInput.onchange = (e) => {
        const file = e.target.files[0];
        const reader = new FileReader();
        reader.onload = () => {
            albums[albumName].push({ image: reader.result, caption, completed: false });
            saveAlbums();
            renderAlbum(albumName);
        };
        reader.readAsDataURL(file);
    };
    fileInput.click();
}

function deleteAlbum(albumName) {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–ª—å–±–æ–º "${albumName}"?`)) {
        delete albums[albumName];
        saveAlbums();
        renderAlbums();
    }
}

function deleteStep(albumName, index) {
    if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥?")) {
        albums[albumName].splice(index, 1);
        saveAlbums();
        renderAlbum(albumName);
    }
}

function toggleStepCompletion(albumName, index) {
    albums[albumName][index].completed = !albums[albumName][index].completed;
    saveAlbums();
    renderAlbum(albumName);
}

function saveAlbums() {
    try {
        tg.CloudStorage.setItem("albums", JSON.stringify(albums), (err) => {
            if (err) console.warn("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", err);
        });
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ CloudStorage:", e);
    }
}

function renderAlbums() {
    const albumsDiv = document.getElementById('albums');
    albumsDiv.innerHTML = '';

    for (const albumName in albums) {
        const albumDiv = document.createElement('div');
        albumDiv.className = 'album';
        albumDiv.innerHTML = `
            <h2 class="album-title" onclick="renameAlbum('${albumName}')">${albumName}</h2>
            <span class="edit-icon" onclick="renameAlbum('${albumName}')">üìù</span>
            <button onclick="renderAlbum('${albumName}')">–û—Ç–∫—Ä—ã—Ç—å</button>
            <button onclick="addStep('${albumName}')">–î–æ–±–∞–≤–∏—Ç—å —à–∞–≥</button>
            <button class="delete-album-btn" onclick="deleteAlbum('${albumName}')">üóë</button>
        `;
        albumsDiv.appendChild(albumDiv);
    }
}

function renderAlbum(albumName) {
    const albumsDiv = document.getElementById('albums');
    albumsDiv.innerHTML = `<h2>${albumName}</h2><button onclick="renderAlbums()">–ù–∞–∑–∞–¥</button>`;

    const addStepBtn = document.createElement('button');
    addStepBtn.textContent = "–î–æ–±–∞–≤–∏—Ç—å —à–∞–≥";
    addStepBtn.onclick = () => addStep(albumName);
    albumsDiv.appendChild(addStepBtn);

    albums[albumName].forEach((step, index) => {
        const stepDiv = document.createElement('div');
        stepDiv.className = 'step';
        stepDiv.innerHTML = `
            <img src="${step.image}" alt="–®–∞–≥ ${index + 1}">
            <span class="step-caption">${step.caption}</span>
            <input type="checkbox" ${step.completed ? "checked" : ""} onclick="toggleStepCompletion('${albumName}', ${index})">
            <button onclick="deleteStep('${albumName}', ${index})">üóë</button>
        `;
        albumsDiv.appendChild(stepDiv);
    });
}

function shareApp() {
    try {
        tg.openTelegramLink("https://t.me/share/url?url=https://t.me/YOUR_BOT_USERNAME&text=–ü–æ–ø—Ä–æ–±—É–π%20—ç—Ç–æ%20–≤–∏–∑—É–∞–ª—å–Ω–æ–µ%20—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ%20–¥–ª—è%20—Å–≤–æ–∏—Ö%20–¥–µ—Ç–µ–π!");
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏:", e);
    }
}

function openFAQ() {
    const faqContent = `
        <h2>–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º?</h2>
        <p>üìå <b>–ß—Ç–æ —ç—Ç–æ –∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?</b></p>
        <p>–≠—Ç–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –¥–µ—Ç—è–º —Å –∞—É—Ç–∏–∑–º–æ–º –∏ –∏—Ö —Ä–æ–¥–∏—Ç–µ–ª—è–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å.</p>
        
        <p>üìå <b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–ª—å–±–æ–º?</b></p>
        <p>–ù–∞–∂–º–∏—Ç–µ ¬´–°–æ–∑–¥–∞—Ç—å –∞–ª—å–±–æ–º¬ª, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ–¥–∂–∏.</p>
        
        <p>üìå <b>–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —à–∞–≥?</b></p>
        <p>–û—Ç–∫—Ä–æ–π—Ç–µ –∞–ª—å–±–æ–º, –Ω–∞–∂–º–∏—Ç–µ ¬´–î–æ–±–∞–≤–∏—Ç—å —à–∞–≥¬ª, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ.</p>
        
        <p>üìå <b>–ö–∞–∫ –æ—Ç–º–µ—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏?</b></p>
        <p>–û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —à–∞–≥–∏ –≥–∞–ª–æ—á–∫–∞–º–∏ ‚òëÔ∏è.</p>

        <p>üìå <b>–ö–∞–∫ —É–¥–∞–ª–∏—Ç—å –∞–ª—å–±–æ–º –∏–ª–∏ —à–∞–≥?</b></p>
        <p>–ù–∞–∂–º–∏—Ç–µ üóë —Ä—è–¥–æ–º —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º.</p>

        <p>üìå <b>–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º?</b></p>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ –∞–ª—å–±–æ–º –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª.</p>

        <p>üìå <b>–ì–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ?</b></p>
        <p>–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –æ–±–ª–∞–∫–µ Telegram (CloudStorage), –Ω–µ –ø—Ä–æ–ø–∞–¥–∞—é—Ç.</p>

        <p>üìå <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º?</b></p>
        <p>üì© Telegram: <a href="https://t.me/i_am_ptrck">@i_am_ptrck</a></p>
        
        <button onclick="closeFAQ()">–ù–∞–∑–∞–¥</button>
    `;

    document.body.innerHTML = faqContent;
}

function closeFAQ() {
    location.reload();
}

renderAlbums();
